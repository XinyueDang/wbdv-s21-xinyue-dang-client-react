{"ast":null,"code":"var _jsxFileName = \"/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/widgets/widget-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WidgetList = () => {\n  _s();\n\n  // TODO: move state management to widgets-reducer.js\n  const {\n    topicId\n  } = useParams();\n  const [widgets, setWidgets] = useState([]);\n  const [editingWidget, setEditingWidget] = useState({});\n  useEffect(() => {\n    // TODO: move server communication to widget-service.js\n    // fetch(\"http://localhost:8080/api/widgets\")\n    fetch(`http://localhost:8080/api/topics/${topicId}/widgets`).then(response => response.json()).then(widgets => setWidgets(widgets));\n  }, [topicId]);\n\n  const createWidgetForTopic = () => {\n    // TODO: move server communication to widget-service.js\n    fetch(`http://localhost:8080/api/topics/${topicId}/widgets`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        type: \"HEADING\",\n        size: 1,\n        text: \"New Widget\"\n      }),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(actualWidget => {\n      setWidgets(widgets => [...widgets, actualWidget]);\n    });\n  };\n\n  const deleteWidget = wid => fetch(`http://localhost:8080/api/widgets/${wid}`, {\n    method: \"DELETE\"\n  }).then(response => {\n    setWidgets(widgets => widgets.filter(w => w.id !== wid));\n  });\n\n  const updateWidget = (wid, widget) => fetch(`http://localhost:8080/api/widgets/${wid}`, {\n    method: \"PUT\",\n    body: JSON.stringify(widget),\n    headers: {\n      'content-type': 'application/json'\n    }\n  }).then(response => {\n    setWidgets(widgets => widgets.map(w => w.id !== wid ? w : widget));\n    setEditingWidget({});\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: createWidgetForTopic,\n      className: \"fas fa-plus fa-2x float-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Widget List (\", widgets.length, \") \", editingWidget.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: widgets.map(widget => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [editingWidget.id === widget.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => {\n              updateWidget(widget.id, editingWidget);\n            },\n            className: \"fas fa-2x fa-check float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => deleteWidget(widget.id),\n            className: \"fas fa-2x fa-trash float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true), editingWidget.id !== widget.id && /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: () => setEditingWidget(widget),\n          className: \"fas fa-2x fa-cog float-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), widget.type === \"HEADING\" && /*#__PURE__*/_jsxDEV(HeadingWidget, {\n          editing: editingWidget.id === widget.id,\n          widget: widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), widget.type === \"PARAGRAPH\" && /*#__PURE__*/_jsxDEV(ParagraphWidget, {\n          editing: editingWidget.id === widget.id,\n          widget: widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)]\n      }, widget.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), JSON.stringify(widgets)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WidgetList, \"2MM6qkCFEd8nQtiftUJsZOlC94k=\", false, function () {\n  return [useParams];\n});\n\n_c = WidgetList;\nexport default WidgetList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetList\");","map":{"version":3,"sources":["/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/widgets/widget-list.js"],"names":["React","useState","useEffect","HeadingWidget","ParagraphWidget","useParams","WidgetList","topicId","widgets","setWidgets","editingWidget","setEditingWidget","fetch","then","response","json","createWidgetForTopic","method","body","JSON","stringify","type","size","text","headers","actualWidget","deleteWidget","wid","filter","w","id","updateWidget","widget","map","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAYF,SAAS,EAA3B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACAU,IAAAA,KAAK,CAAE,oCAAmCL,OAAQ,UAA7C,CAAL,CACKM,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUL,OAAO,IAAIC,UAAU,CAACD,OAAD,CAF/B;AAGH,GANQ,EAMN,CAACD,OAAD,CANM,CAAT;;AAOA,QAAMS,oBAAoB,GAAG,MAAM;AAC/B;AACAJ,IAAAA,KAAK,CAAE,oCAAmCL,OAAQ,UAA7C,EAAwD;AACzDU,MAAAA,MAAM,EAAE,MADiD;AAEzDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,IAAI,EAAE,CAAxB;AAA2BC,QAAAA,IAAI,EAAE;AAAjC,OAAf,CAFmD;AAGzDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHgD,KAAxD,CAAL,CAOKX,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,EAQKF,IARL,CAQUY,YAAY,IAAI;AAClBhB,MAAAA,UAAU,CAACD,OAAO,IAAK,CAAC,GAAGA,OAAJ,EAAaiB,YAAb,CAAb,CAAV;AACH,KAVL;AAWH,GAbD;;AAcA,QAAMC,YAAY,GAAIC,GAAD,IACjBf,KAAK,CAAE,qCAAoCe,GAAI,EAA1C,EAA6C;AAC9CV,IAAAA,MAAM,EAAE;AADsC,GAA7C,CAAL,CAEGJ,IAFH,CAEQC,QAAQ,IAAI;AAChBL,IAAAA,UAAU,CAAED,OAAD,IAAaA,OAAO,CAACoB,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASH,GAA7B,CAAd,CAAV;AACH,GAJD,CADJ;;AAMA,QAAMI,YAAY,GAAG,CAACJ,GAAD,EAAMK,MAAN,KACjBpB,KAAK,CAAE,qCAAoCe,GAAI,EAA1C,EAA6C;AAC9CV,IAAAA,MAAM,EAAE,KADsC;AAE9CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeY,MAAf,CAFwC;AAG9CR,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHqC,GAA7C,CAAL,CAMGX,IANH,CAMQC,QAAQ,IAAI;AAChBL,IAAAA,UAAU,CAAED,OAAD,IAAaA,OAAO,CAACyB,GAAR,CAAYJ,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASH,GAAT,GAAeE,CAAf,GAAmBG,MAApC,CAAd,CAAV;AACArB,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH,GATD,CADJ;;AAYA,sBACI;AAAA,4BACI;AAAG,MAAA,OAAO,EAAEK,oBAAZ;AAAkC,MAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,kCAAkBR,OAAO,CAAC0B,MAA1B,QAAoCxB,aAAa,CAACoB,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAEQtB,OAAO,CAACyB,GAAR,CAAYD,MAAM,iBAClB;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,mBAEQtB,aAAa,CAACoB,EAAd,KAAqBE,MAAM,CAACF,EAA5B,iBACI;AAAA,kCACI;AAAG,YAAA,OAAO,EAAE,MAAM;AACdC,cAAAA,YAAY,CAACC,MAAM,CAACF,EAAR,EAAYpB,aAAZ,CAAZ;AACH,aAFD;AAEG,YAAA,SAAS,EAAC;AAFb;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAG,YAAA,OAAO,EAAE,MAAMgB,YAAY,CAACM,MAAM,CAACF,EAAR,CAA9B;AAA2C,YAAA,SAAS,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,wBAHZ,EAWQpB,aAAa,CAACoB,EAAd,KAAqBE,MAAM,CAACF,EAA5B,iBACA;AAAG,UAAA,OAAO,EAAE,MAAMnB,gBAAgB,CAACqB,MAAD,CAAlC;AAA4C,UAAA,SAAS,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAZR,EAeQA,MAAM,CAACX,IAAP,KAAgB,SAAhB,iBACA,QAAC,aAAD;AACI,UAAA,OAAO,EAAEX,aAAa,CAACoB,EAAd,KAAqBE,MAAM,CAACF,EADzC;AAEI,UAAA,MAAM,EAAEE;AAFZ;AAAA;AAAA;AAAA;AAAA,gBAhBR,EAqBQA,MAAM,CAACX,IAAP,KAAgB,WAAhB,iBACA,QAAC,eAAD;AACI,UAAA,OAAO,EAAEX,aAAa,CAACoB,EAAd,KAAqBE,MAAM,CAACF,EADzC;AAEI,UAAA,MAAM,EAAEE;AAFZ;AAAA;AAAA;AAAA;AAAA,gBAtBR;AAAA,SAAqCA,MAAM,CAACF,EAA5C;AAAA;AAAA;AAAA;AAAA,cADA;AAFR;AAAA;AAAA;AAAA;AAAA,YAHJ,EAoCKX,IAAI,CAACC,SAAL,CAAeZ,OAAf,CApCL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CApFD;;GAAMF,U;UAEgBD,S;;;KAFhBC,U;AAqFN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport {useParams} from \"react-router-dom\";\n\nconst WidgetList = () => {\n    // TODO: move state management to widgets-reducer.js\n    const {topicId} = useParams();\n    const [widgets, setWidgets] = useState([])\n    const [editingWidget, setEditingWidget] = useState({});\n    useEffect(() => {\n        // TODO: move server communication to widget-service.js\n        // fetch(\"http://localhost:8080/api/widgets\")\n        fetch(`http://localhost:8080/api/topics/${topicId}/widgets`)\n            .then(response => response.json())\n            .then(widgets => setWidgets(widgets))\n    }, [topicId])\n    const createWidgetForTopic = () => {\n        // TODO: move server communication to widget-service.js\n        fetch(`http://localhost:8080/api/topics/${topicId}/widgets`, {\n            method: \"POST\",\n            body: JSON.stringify({type: \"HEADING\", size: 1, text: \"New Widget\"}),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n            .then(response => response.json())\n            .then(actualWidget => {\n                setWidgets(widgets => ([...widgets, actualWidget]))\n            })\n    }\n    const deleteWidget = (wid) =>\n        fetch(`http://localhost:8080/api/widgets/${wid}`, {\n            method: \"DELETE\",\n        }).then(response => {\n            setWidgets((widgets) => widgets.filter(w => w.id !== wid))\n        })\n    const updateWidget = (wid, widget) =>\n        fetch(`http://localhost:8080/api/widgets/${wid}`, {\n            method: \"PUT\",\n            body: JSON.stringify(widget),\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => {\n            setWidgets((widgets) => widgets.map(w => w.id !== wid ? w : widget))\n            setEditingWidget({})\n        })\n        \n    return(\n        <div>\n            <i onClick={createWidgetForTopic} className=\"fas fa-plus fa-2x float-right\"></i>\n            <h2>Widget List ({widgets.length}) {editingWidget.id}</h2>\n            <ul className=\"list-group\">\n                {\n                    widgets.map(widget =>\n                    <li className=\"list-group-item\" key={widget.id}>\n                        {\n                            editingWidget.id === widget.id &&\n                                <>\n                                    <i onClick={() => {\n                                        updateWidget(widget.id, editingWidget)\n                                    }} className=\"fas fa-2x fa-check float-right\"></i>\n                                    <i onClick={() => deleteWidget(widget.id)} className=\"fas fa-2x fa-trash float-right\"></i>\n                                </>\n                        }\n                        {\n                            editingWidget.id !== widget.id &&\n                            <i onClick={() => setEditingWidget(widget)} className=\"fas fa-2x fa-cog float-right\"></i>\n                        }\n                        {\n                            widget.type === \"HEADING\" &&\n                            <HeadingWidget\n                                editing={editingWidget.id === widget.id}\n                                widget={widget}/>\n                        }\n                        {\n                            widget.type === \"PARAGRAPH\" &&\n                            <ParagraphWidget\n                                editing={editingWidget.id === widget.id}\n                                widget={widget}/>\n                        }\n                    </li>\n                    )\n                }\n            </ul>\n            {JSON.stringify(widgets)}\n        </div>\n    )\n}\nexport default WidgetList;\n"]},"metadata":{},"sourceType":"module"}