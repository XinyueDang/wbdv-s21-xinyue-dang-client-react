{"ast":null,"code":"var _jsxFileName = \"/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/widgets/optional-element.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OptionalElement = ({\n  item,\n  setItem\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [item.type == 'HEADING' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setItem({ ...item,\n            text: e.target.value\n          });\n        },\n        value: item.text,\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          setItem({ ...item,\n            size: parseInt(e.target.value)\n          });\n        },\n        value: item.size,\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"Heading 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 2,\n          children: \"Heading 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 3,\n          children: \"Heading 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 4,\n          children: \"Heading 4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 5,\n          children: \"Heading 5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 6,\n          children: \"Heading 6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), item.type == 'PARAGRAPH' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => {\n          setItem({ ...item,\n            text: e.target.value\n          });\n        },\n        value: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), item.type == 'LISTWIDGET' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          id: \"flexCheckChecked\",\n          onChange: e => {\n            setItem({ ...item,\n              widgetOrder: e.target.checked ? 1 : 0\n            });\n          },\n          checked: item.widgetOrder === 1 ? true : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: \"Ordered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"List Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => {\n          setItem({ ...item,\n            text: e.target.value\n          });\n        },\n        value: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), item.type == 'LISTWIDGET' && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n};\n\n_c = OptionalElement;\nexport default OptionalElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionalElement\");","map":{"version":3,"sources":["/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/widgets/optional-element.js"],"names":["React","useState","OptionalElement","item","setItem","type","e","text","target","value","size","parseInt","widgetOrder","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst OptionalElement = ({ item, setItem }) => {\n    return (\n        <>\n            {item.type == 'HEADING' && (\n                <>\n                    <input\n                        onChange={(e) => {\n                            setItem({\n                                ...item,\n                                text: e.target.value,\n                            })\n                        }}\n                        value={item.text}\n                        className=\"form-control\"\n                    />\n                    <select\n                        onChange={(e) => {\n                            setItem({\n                                ...item,\n                                size: parseInt(e.target.value),\n                            })\n                        }}\n                        value={item.size}\n                        className=\"form-control\"\n                    >\n                        <option value={1}>Heading 1</option>\n                        <option value={2}>Heading 2</option>\n                        <option value={3}>Heading 3</option>\n                        <option value={4}>Heading 4</option>\n                        <option value={5}>Heading 5</option>\n                        <option value={6}>Heading 6</option>\n                    </select>\n                </>\n            )}\n            {item.type == 'PARAGRAPH' && (\n                <>\n                    <textarea\n                        onChange={(e) => {\n                            setItem({\n                                ...item,\n                                text: e.target.value,\n                            })\n                        }}\n                        value={item.text}\n                    />\n                </>\n            )}\n            {item.type == 'LISTWIDGET' && (\n                <>\n                    <div className=\"form-check\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            id=\"flexCheckChecked\"\n                            onChange={(e) => {\n                                setItem({\n                                    ...item,\n                                    widgetOrder: e.target.checked ? 1 : 0,\n                                })\n                            }}\n                            checked={item.widgetOrder === 1 ? true : false}\n                        />\n                        <label className=\"form-check-label\">Ordered</label>\n                    </div>\n                    <h6>List Items</h6>\n                    <textarea\n                        onChange={(e) => {\n                            setItem({\n                                ...item,\n                                text: e.target.value,\n                            })\n                        }}\n                        value={item.text}\n                    />\n                </>\n            )}\n            {item.type == 'LISTWIDGET' && \n            <>\n                \n            </>}\n        </>\n    )\n}\n\nexport default OptionalElement\n"]},"metadata":{},"sourceType":"module"}