{"ast":null,"code":"var _jsxFileName = \"/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/course-editor/topic-pills.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport EditableItem from '../editable-item';\nimport { useParams } from 'react-router-dom';\nimport topicService from '../../services/topic-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TopicPills = ({\n  deleteTopic,\n  updateTopic,\n  createTopic,\n  findTopicsForLesson,\n  topics = []\n}) => {\n  _s();\n\n  const {\n    courseId,\n    moduleId,\n    lessonId,\n    topicId\n  } = useParams();\n  useEffect(() => {\n    if (lessonId !== \"undefined\" && typeof lessonId !== \"undefined\") {\n      findTopicsForLesson(lessonId);\n    }\n  }, [lessonId]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"nav nav-pills\",\n    children: [topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(EditableItem, {\n        active: topic._id === topicId,\n        to: `/courses/editor/${courseId}/${moduleId}/${lessonId}/${topic._id}`,\n        item: topic,\n        deleteItem: deleteTopic,\n        updateItem: updateTopic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => {\n          createTopic(lessonId);\n        },\n        className: \"fas fa-plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TopicPills, \"905xAzsTiIVasjI0j/BFz3s7XyE=\", false, function () {\n  return [useParams];\n});\n\n_c = TopicPills;\n\nconst stpm = state => {\n  return {\n    topics: state.topicReducer.topics\n  };\n};\n\nconst dtpm = dispatch => {\n  return {\n    createTopic: lessonId => {\n      topicService.createTopic(lessonId, {\n        title: 'New Topic'\n      }).then(theActualTopic => dispatch({\n        type: 'CREATE_TOPIC',\n        topic: theActualTopic\n      }));\n    },\n    deleteTopic: item => {\n      topicService.deleteTopic(item._id).then(status => dispatch({\n        type: 'DELETE_TOPIC',\n        topicToDelete: item\n      }));\n    },\n    updateTopic: topic => topicService.updateTopic(topic._id, topic).then(status => dispatch({\n      type: 'UPDATE_TOPIC',\n      topicToUpdate: topic\n    })),\n    findTopicsForLesson: lessonId => topicService.findTopicsForLesson(lessonId).then(theTopics => dispatch({\n      type: 'FIND_TOPICS_FOR_LESSON',\n      topics: theTopics\n    }))\n  };\n};\n\nexport default connect(stpm, dtpm)(TopicPills);\n\nvar _c;\n\n$RefreshReg$(_c, \"TopicPills\");","map":{"version":3,"sources":["/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/course-editor/topic-pills.js"],"names":["React","useEffect","connect","EditableItem","useParams","topicService","TopicPills","deleteTopic","updateTopic","createTopic","findTopicsForLesson","topics","courseId","moduleId","lessonId","topicId","map","topic","_id","stpm","state","topicReducer","dtpm","dispatch","title","then","theActualTopic","type","item","status","topicToDelete","topicToUpdate","theTopics"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport {connect} from 'react-redux'\nimport EditableItem from '../editable-item'\nimport {useParams} from 'react-router-dom'\nimport topicService from '../../services/topic-service'\n\nconst TopicPills = ({\n    deleteTopic,\n    updateTopic,\n    createTopic,\n    findTopicsForLesson,\n    topics=[]\n}) => {\n    const{courseId, moduleId, lessonId, topicId} = useParams()\n    useEffect(() => {\n        if(lessonId !== \"undefined\" && typeof lessonId !== \"undefined\") {\n            findTopicsForLesson(lessonId)\n        }\n    }, [lessonId])\n    return (\n        <ul className=\"nav nav-pills\">\n            {\n            topics.map(topic => \n                <li className=\"nav-item\">\n                    <EditableItem \n                    active={topic._id === topicId}\n                    to = {`/courses/editor/${courseId}/${moduleId}/${lessonId}/${topic._id}`}\n                    item={topic}\n                    deleteItem={deleteTopic}\n                    updateItem={updateTopic}\n                    />\n                </li>\n            )}\n            <li className=\"nav-item\">\n                    <i\n                        onClick= {() => {createTopic(lessonId)}}\n                        className=\"fas fa-plus\"\n                    ></i>\n                </li>\n        </ul>\n    )\n}\n\nconst stpm = (state) => {\n    return {\n        topics: state.topicReducer.topics\n    }\n}\nconst dtpm = (dispatch) => {\n    return {\n        createTopic: (lessonId) => {\n            topicService\n                .createTopic(lessonId, { title: 'New Topic' })\n                .then((theActualTopic) =>\n                    dispatch({\n                        type: 'CREATE_TOPIC',\n                        topic: theActualTopic,\n                    })\n                )\n        },\n        deleteTopic: (item) => {\n            topicService.deleteTopic(item._id).then((status) =>\n                dispatch({\n                    type: 'DELETE_TOPIC',\n                    topicToDelete: item,\n                })\n            )\n        },\n        updateTopic: (topic) =>\n        topicService.updateTopic(topic._id, topic).then((status) =>\n            dispatch({\n                type: 'UPDATE_TOPIC',\n                topicToUpdate: topic,\n            })\n        ),\n        findTopicsForLesson: (lessonId) =>\n            topicService.findTopicsForLesson(lessonId).then((theTopics) =>\n                dispatch({\n                    type: 'FIND_TOPICS_FOR_LESSON',\n                    topics: theTopics,\n                })\n            ),\n}}\n\nexport default connect(stpm, dtpm)(TopicPills)"]},"metadata":{},"sourceType":"module"}