{"ast":null,"code":"var _jsxFileName = \"/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/widgets/widget-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WidgetList = () => {\n  _s();\n\n  // TODO: move state management to widgets-reducer\n  const {\n    topicId\n  } = useParams();\n  const [widgets, setWidgets] = useState([]);\n  useEffect(() => {\n    // TODO: move server communication to widget-service\n    // fetch(\"http://localhost:8080/api/widgets\")\n    fetch(`http://localhost:8080/api/topics/${topicId}/widgets`).then(response => response.json()).then(widgets => setWidgets(widgets));\n  }, [topicId]);\n\n  const createWidgetForTopic = () => {\n    fetch(`http://localhost:8080/api/topics/${topicId}/widgets`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        type: \"HEADING\",\n        size: 1,\n        text: \"New Widget\"\n      }),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(actualWidget => {\n      setWidgets(widgets => [...widgets, actualWidget]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: createWidgetForTopic,\n      className: \"fas fa-plus fa-2x float-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Widget List (\", widgets.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: widgets.map(widget => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [widget.type === \"HEADING\" && /*#__PURE__*/_jsxDEV(HeadingWidget, {\n          widget: widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), widget.type === \"PARAGRAPH\" && /*#__PURE__*/_jsxDEV(ParagraphWidget, {\n          widget: widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, widget.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), JSON.stringify(widgets)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WidgetList, \"ytjuT4QWDm4LRKlGx/vD3SzLAcw=\", false, function () {\n  return [useParams];\n});\n\n_c = WidgetList;\nexport default WidgetList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetList\");","map":{"version":3,"sources":["/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/widgets/widget-list.js"],"names":["React","useState","useEffect","HeadingWidget","ParagraphWidget","useParams","WidgetList","topicId","widgets","setWidgets","fetch","then","response","json","createWidgetForTopic","method","body","JSON","stringify","type","size","text","headers","actualWidget","length","map","widget","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAYF,SAAS,EAA3B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACAQ,IAAAA,KAAK,CAAE,oCAAmCH,OAAQ,UAA7C,CAAL,CACKI,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUH,OAAO,IAAIC,UAAU,CAACD,OAAD,CAF/B;AAGH,GANQ,EAMN,CAACD,OAAD,CANM,CAAT;;AAOA,QAAMO,oBAAoB,GAAG,MAAM;AAC/BJ,IAAAA,KAAK,CAAE,oCAAmCH,OAAQ,UAA7C,EAAwD;AACzDQ,MAAAA,MAAM,EAAE,MADiD;AAEzDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,IAAI,EAAE,CAAxB;AAA2BC,QAAAA,IAAI,EAAE;AAAjC,OAAf,CAFmD;AAGzDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHgD,KAAxD,CAAL,CAOKX,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,EAQKF,IARL,CAQUY,YAAY,IAAI;AAClBd,MAAAA,UAAU,CAACD,OAAO,IAAK,CAAC,GAAGA,OAAJ,EAAae,YAAb,CAAb,CAAV;AACH,KAVL;AAWH,GAZD;;AAaA,sBACI;AAAA,4BACI;AAAG,MAAA,OAAO,EAAET,oBAAZ;AAAkC,MAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,kCAAkBN,OAAO,CAACgB,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAEQhB,OAAO,CAACiB,GAAR,CAAYC,MAAM,iBAClB;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,mBAEQA,MAAM,CAACP,IAAP,KAAgB,SAAhB,iBACA,QAAC,aAAD;AAAe,UAAA,MAAM,EAAEO;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAHR,EAMQA,MAAM,CAACP,IAAP,KAAgB,WAAhB,iBACA,QAAC,eAAD;AAAiB,UAAA,MAAM,EAAEO;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAPR;AAAA,SAAqCA,MAAM,CAACC,EAA5C;AAAA;AAAA;AAAA;AAAA,cADA;AAFR;AAAA;AAAA;AAAA;AAAA,YAHJ,EAmBKV,IAAI,CAACC,SAAL,CAAeV,OAAf,CAnBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA/CD;;GAAMF,U;UAEgBD,S;;;KAFhBC,U;AAgDN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport {useParams} from \"react-router-dom\";\n\nconst WidgetList = () => {\n    // TODO: move state management to widgets-reducer\n    const {topicId} = useParams();\n    const [widgets, setWidgets] = useState([])\n    useEffect(() => {\n        // TODO: move server communication to widget-service\n        // fetch(\"http://localhost:8080/api/widgets\")\n        fetch(`http://localhost:8080/api/topics/${topicId}/widgets`)\n            .then(response => response.json())\n            .then(widgets => setWidgets(widgets))\n    }, [topicId])\n    const createWidgetForTopic = () => {\n        fetch(`http://localhost:8080/api/topics/${topicId}/widgets`, {\n            method: \"POST\",\n            body: JSON.stringify({type: \"HEADING\", size: 1, text: \"New Widget\"}),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n            .then(response => response.json())\n            .then(actualWidget => {\n                setWidgets(widgets => ([...widgets, actualWidget]))\n            })\n    }\n    return(\n        <div>\n            <i onClick={createWidgetForTopic} className=\"fas fa-plus fa-2x float-right\"></i>\n            <h2>Widget List ({widgets.length})</h2>\n            <ul className=\"list-group\">\n                {\n                    widgets.map(widget =>\n                    <li className=\"list-group-item\" key={widget.id}>\n                        {\n                            widget.type === \"HEADING\" &&\n                            <HeadingWidget widget={widget}/>\n                        }\n                        {\n                            widget.type === \"PARAGRAPH\" &&\n                            <ParagraphWidget widget={widget}/>\n                        }\n                    </li>\n                    )\n                }\n            </ul>\n            {JSON.stringify(widgets)}\n        </div>\n    )\n}\nexport default WidgetList;\n"]},"metadata":{},"sourceType":"module"}