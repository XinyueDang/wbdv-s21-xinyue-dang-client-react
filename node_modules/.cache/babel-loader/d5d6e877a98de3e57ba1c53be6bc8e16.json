{"ast":null,"code":"var _jsxFileName = \"/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/widgets/widget-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport widgetService from '../../services/widget-service';\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WidgetList = ({\n  deleteWidget,\n  updateWidget,\n  createWidget,\n  findWidgetsForTopic,\n  widgets = [],\n  clearWidget\n}) => {\n  _s();\n\n  // TODO: move state management to widgets-reducer.js\n  const {\n    topicId\n  } = useParams();\n  useEffect(() => {\n    if (topicId !== 'undefined' && typeof topicId !== 'undefined') {\n      findWidgetsForTopic(topicId);\n    } else {\n      clearWidget();\n    }\n  }, [topicId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: createWidgetForTopic,\n      className: \"fas fa-plus float-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Widget List \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: widgets.map(widget => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [editingWidget.id === widget.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => {\n              updateWidget(widget.id, editingWidget);\n            },\n            className: \"fas fa-check float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => deleteWidget(widget.id),\n            className: \"fas fa-trash float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true), editingWidget.id !== widget.id && /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: () => setEditingWidget(widget),\n          className: \"fas fa-cog float-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), widget.type === \"HEADING\" && /*#__PURE__*/_jsxDEV(HeadingWidget, {\n          editing: editingWidget.id === widget.id,\n          widget: widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), widget.type === \"PARAGRAPH\" && /*#__PURE__*/_jsxDEV(ParagraphWidget, {\n          editing: editingWidget.id === widget.id,\n          widget: widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)]\n      }, widget.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), JSON.stringify(widgets)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WidgetList, \"WurdqOqjxzSoLchyZTL0RSLd/6w=\", false, function () {\n  return [useParams];\n});\n\n_c = WidgetList;\n\nconst stpm = state => {\n  return {\n    widgets: state.widgetReducer.widgets\n  };\n};\n\nconst dtpm = dispatch => {\n  return {\n    createWidget: topicId => {\n      widgetService.createWidget(topicId, {\n        title: 'New Widget'\n      }).then(theActualWidget => dispatch({\n        type: 'CREATE_WIDGET',\n        widget: theActualWidget\n      }));\n    },\n    deleteWidget: item => {\n      widgetService.deleteWidget(item._id).then(status => dispatch({\n        type: 'DELETE_WIDGET',\n        widgetToDelete: item\n      }));\n    },\n    updateWidget: widget => widgetService.updateWidget(widget._id, widget).then(status => dispatch({\n      type: 'UPDATE_WIDGET',\n      widgetToUpdate: widget\n    })),\n    findWidgetsForTopic: topicId => widgetService.findWidgetsForTopic(topicId).then(theWidgets => dispatch({\n      type: 'FIND_WIDGETS_FOR_TOPIC',\n      widgets: theWidgets\n    })),\n    clearWidget: () => dispatch({\n      type: 'CLEAR_WIDGET',\n      widgets: []\n    })\n  };\n};\n\nexport default connect(stpm, dtpm)(WidgetList);\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetList\");","map":{"version":3,"sources":["/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/widgets/widget-list.js"],"names":["React","useEffect","connect","useParams","widgetService","HeadingWidget","ParagraphWidget","WidgetList","deleteWidget","updateWidget","createWidget","findWidgetsForTopic","widgets","clearWidget","topicId","createWidgetForTopic","map","widget","editingWidget","id","setEditingWidget","type","JSON","stringify","stpm","state","widgetReducer","dtpm","dispatch","title","then","theActualWidget","item","_id","status","widgetToDelete","widgetToUpdate","theWidgets"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport widgetService from '../../services/widget-service'\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\n\nconst WidgetList = ({\n    deleteWidget,\n    updateWidget,\n    createWidget,\n    findWidgetsForTopic,\n    widgets = [],\n    clearWidget,\n}) => {\n    // TODO: move state management to widgets-reducer.js\n    const {topicId} = useParams();\n    useEffect(() => {\n        if (topicId !== 'undefined' && typeof topicId !== 'undefined') {\n            findWidgetsForTopic(topicId)\n        }else{\n            clearWidget()\n        }\n    }, [topicId])\n    \n    return(\n        <div>\n            <i onClick={createWidgetForTopic} className=\"fas fa-plus float-right\"></i>\n            <h4>Widget List </h4>\n            <ul className=\"list-group\">\n                {\n                    widgets.map(widget =>\n                    <li className=\"list-group-item\" key={widget.id}>\n                        {\n                            editingWidget.id === widget.id &&\n                                <>\n                                    <i onClick={() => {\n                                        updateWidget(widget.id, editingWidget)\n                                    }} className=\"fas fa-check float-right\"></i>\n                                    <i onClick={() => deleteWidget(widget.id)} className=\"fas fa-trash float-right\"></i>\n                                </>\n                        }\n                        {\n                            editingWidget.id !== widget.id &&\n                            <i onClick={() => setEditingWidget(widget)} className=\"fas fa-cog float-right\"></i>\n                        }\n                        {\n                            widget.type === \"HEADING\" &&\n                            <HeadingWidget\n                                editing={editingWidget.id === widget.id}\n                                widget={widget}/>\n                        }\n                        {\n                            widget.type === \"PARAGRAPH\" &&\n                            <ParagraphWidget\n                                editing={editingWidget.id === widget.id}\n                                widget={widget}/>\n                        }\n                    </li>\n                    )\n                }\n            </ul>\n            {JSON.stringify(widgets)}\n        </div>\n    )\n}\n\nconst stpm = (state) => {\n    return {\n        widgets: state.widgetReducer.widgets,\n    }\n}\nconst dtpm = (dispatch) => {\n    return {\n        createWidget: (topicId) => {\n            widgetService\n                .createWidget(topicId, { title: 'New Widget' })\n                .then((theActualWidget) =>\n                    dispatch({\n                        type: 'CREATE_WIDGET',\n                        widget: theActualWidget,\n                    })\n                )\n        },\n        deleteWidget: (item) => {\n            widgetService.deleteWidget(item._id).then((status) =>\n                dispatch({\n                    type: 'DELETE_WIDGET',\n                    widgetToDelete: item,\n                })\n            )\n        },\n        updateWidget: (widget) =>\n            widgetService.updateWidget(widget._id, widget).then((status) =>\n                dispatch({\n                    type: 'UPDATE_WIDGET',\n                    widgetToUpdate: widget,\n                })\n            ),\n        findWidgetsForTopic: (topicId) =>\n            widgetService.findWidgetsForTopic(topicId).then((theWidgets) =>\n                dispatch({\n                    type: 'FIND_WIDGETS_FOR_TOPIC',\n                    widgets: theWidgets,\n                })\n            ),\n        clearWidget: () =>\n            dispatch({\n                type: 'CLEAR_WIDGET',\n                widgets: [],\n            }),\n    }\n}\n\nexport default connect(stpm, dtpm)(WidgetList)\n"]},"metadata":{},"sourceType":"module"}