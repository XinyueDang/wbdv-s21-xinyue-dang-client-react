{"ast":null,"code":"var _jsxFileName = \"/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/course-editor/lesson-tabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport EditableItem from '../editable-item';\nimport { useParams } from 'react-router-dom';\nimport lessonService from '../../services/lesson-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LessonTabs = ({\n  lessons = [],\n  updateLesson,\n  deleteLesson\n}) => {\n  _s();\n\n  const {\n    courseId,\n    moduleId\n  } = useParams();\n  useEffect(() => {\n    findModulesForCourse(courseId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"nav nav-tabs\",\n    children: lessons.map(lesson => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(EditableItem, {\n        to: `/courses/editor/${courseId}/${moduleId}/${lesson._id}`,\n        deleteItem: deleteLesson,\n        updateItem: updateLesson,\n        item: lesson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LessonTabs, \"SGAL504k1+OzbgzvYT/LEZns2sA=\", false, function () {\n  return [useParams];\n});\n\n_c = LessonTabs;\n\nconst stpm = state => {\n  return {\n    lessons: state.lessonReducer.lessons\n  };\n};\n\nconst dtpm = dispatch => {\n  return {\n    deleteLesson: item => {\n      lessonService.deleteLesson(item._id).then(status => dispatch({\n        type: 'DELETE_LESSON',\n        lessonToDelete: item\n      }));\n    },\n    updateLesson: lesson => lessonService.updateLesson(lesson._id, lesson).then(status => dispatch({\n      type: 'UPDATE_MODULE',\n      module\n    })),\n    findLessonsForModule: moduleId => lessonService.findLessonsForModule(moduleId).then(theLessons => dispatch({\n      type: 'FIND_MODULES_FOR_COURSE',\n      modules: theLessons\n    }))\n  };\n};\n\nexport default connect(stpm, dtpm)(LessonTabs);\n\nvar _c;\n\n$RefreshReg$(_c, \"LessonTabs\");","map":{"version":3,"sources":["/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/course-editor/lesson-tabs.js"],"names":["React","useEffect","connect","EditableItem","useParams","lessonService","LessonTabs","lessons","updateLesson","deleteLesson","courseId","moduleId","findModulesForCourse","map","lesson","_id","stpm","state","lessonReducer","dtpm","dispatch","item","then","status","type","lessonToDelete","module","findLessonsForModule","theLessons","modules"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAO,GAAG,EAAZ;AAAgBC,EAAAA,YAAhB;AAA8BC,EAAAA;AAA9B,CAAD,KAAkD;AAAA;;AACjE,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAuBP,SAAS,EAAtC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,oBAAoB,CAACF,QAAD,CAApB;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA,cACKH,OAAO,CAACM,GAAR,CAAaC,MAAD,iBACT;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,6BACI,QAAC,YAAD;AACI,QAAA,EAAE,EAAG,mBAAkBJ,QAAS,IAAGC,QAAS,IAAGG,MAAM,CAACC,GAAI,EAD9D;AAEI,QAAA,UAAU,EAAEN,YAFhB;AAGI,QAAA,UAAU,EAAED,YAHhB;AAII,QAAA,IAAI,EAAEM;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAnBD;;GAAMR,U;UAC2BF,S;;;KAD3BE,U;;AAqBN,MAAMU,IAAI,GAAIC,KAAD,IAAW;AACpB,SAAO;AACHV,IAAAA,OAAO,EAAEU,KAAK,CAACC,aAAN,CAAoBX;AAD1B,GAAP;AAGH,CAJD;;AAKA,MAAMY,IAAI,GAAIC,QAAD,IAAc;AACvB,SAAO;AACHX,IAAAA,YAAY,EAAGY,IAAD,IAAU;AACpBhB,MAAAA,aAAa,CAACI,YAAd,CAA2BY,IAAI,CAACN,GAAhC,EAAqCO,IAArC,CAA2CC,MAAD,IACtCH,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,eADD;AAELC,QAAAA,cAAc,EAAEJ;AAFX,OAAD,CADZ;AAMH,KARE;AASHb,IAAAA,YAAY,EAAGM,MAAD,IACVT,aAAa,CAACG,YAAd,CAA2BM,MAAM,CAACC,GAAlC,EAAuCD,MAAvC,EAA+CQ,IAA/C,CAAqDC,MAAD,IAChDH,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,eADD;AAELE,MAAAA;AAFK,KAAD,CADZ,CAVD;AAgBHC,IAAAA,oBAAoB,EAAGhB,QAAD,IAClBN,aAAa,CAACsB,oBAAd,CAAmChB,QAAnC,EAA6CW,IAA7C,CAAmDM,UAAD,IAC9CR,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,yBADD;AAELK,MAAAA,OAAO,EAAED;AAFJ,KAAD,CADZ;AAjBD,GAAP;AAwBH,CAzBD;;AA2BA,eAAe1B,OAAO,CAACc,IAAD,EAAOG,IAAP,CAAP,CAAoBb,UAApB,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport EditableItem from '../editable-item'\nimport {useParams} from 'react-router-dom'\nimport lessonService from '../../services/lesson-service'\n\nconst LessonTabs = ({ lessons = [], updateLesson, deleteLesson }) => {\n    const {courseId, moduleId} = useParams();\n    useEffect(() => {\n        findModulesForCourse(courseId)\n    }, [])\n    return (\n        <ul className=\"nav nav-tabs\">\n            {lessons.map((lesson) => (\n                <li className=\"nav-item\">\n                    <EditableItem\n                        to={`/courses/editor/${courseId}/${moduleId}/${lesson._id}`}\n                        deleteItem={deleteLesson}\n                        updateItem={updateLesson}\n                        item={lesson}\n                    />\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst stpm = (state) => {\n    return {\n        lessons: state.lessonReducer.lessons,\n    }\n}\nconst dtpm = (dispatch) => {\n    return {\n        deleteLesson: (item) => {\n            lessonService.deleteLesson(item._id).then((status) =>\n                dispatch({\n                    type: 'DELETE_LESSON',\n                    lessonToDelete: item,\n                })\n            )\n        },\n        updateLesson: (lesson) =>\n            lessonService.updateLesson(lesson._id, lesson).then((status) =>\n                dispatch({\n                    type: 'UPDATE_MODULE',\n                    module,\n                })\n            ),\n        findLessonsForModule: (moduleId) =>\n            lessonService.findLessonsForModule(moduleId).then((theLessons) =>\n                dispatch({\n                    type: 'FIND_MODULES_FOR_COURSE',\n                    modules: theLessons,\n                })\n            ),\n    }\n}\n\nexport default connect(stpm, dtpm)(LessonTabs)\n"]},"metadata":{},"sourceType":"module"}