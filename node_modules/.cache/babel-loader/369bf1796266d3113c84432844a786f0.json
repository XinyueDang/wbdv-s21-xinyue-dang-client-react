{"ast":null,"code":"var _jsxFileName = \"/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/course-editor/lesson-tabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport EditableItem from '../editable-item';\nimport { useParams } from 'react-router-dom';\nimport lessonService from '../../services/lesson-service';\nimport './lesson-tabs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LessonTabs = ({\n  lessons = [],\n  createLesson,\n  updateLesson,\n  deleteLesson,\n  findLessonsForModule,\n  clearLesson\n}) => {\n  _s();\n\n  const {\n    layout,\n    courseId,\n    moduleId,\n    lessonId\n  } = useParams();\n  useEffect(() => {\n    if (moduleId !== 'undefined' && typeof moduleId !== 'undefined') {\n      findLessonsForModule(moduleId);\n    } else {\n      clearLesson();\n    }\n  }, [moduleId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-11\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav nav-tabs\",\n        children: lessons.map(lesson => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `nav-item ${lessonId === lesson._id ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(EditableItem, {\n            active: lesson._id === lessonId,\n            to: `/courses/${layout}/editor/${courseId}/${moduleId}/${lesson._id}`,\n            deleteItem: deleteLesson,\n            updateItem: updateLesson,\n            item: lesson\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, lesson._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-1\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => {\n          createLesson(moduleId);\n        },\n        className: \"fas fa-plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LessonTabs, \"50F4mduqcNsk/xtJQNnqGFvpw/I=\", false, function () {\n  return [useParams];\n});\n\n_c = LessonTabs;\n\nconst stpm = state => {\n  return {\n    lessons: state.lessonReducer.lessons\n  };\n};\n\nconst dtpm = dispatch => {\n  return {\n    createLesson: moduleId => {\n      lessonService.createLesson(moduleId, {\n        title: 'New Lesson'\n      }).then(theActualLesson => dispatch({\n        type: 'CREATE_LESSON',\n        lesson: theActualLesson\n      }));\n    },\n    deleteLesson: item => {\n      lessonService.deleteLesson(item._id).then(status => dispatch({\n        type: 'DELETE_LESSON',\n        lessonToDelete: item\n      }));\n    },\n    updateLesson: lesson => lessonService.updateLesson(lesson._id, lesson).then(status => dispatch({\n      type: 'UPDATE_LESSON',\n      lessonToUpdate: lesson\n    })),\n    findLessonsForModule: moduleId => lessonService.findLessonsForModule(moduleId).then(theLessons => dispatch({\n      type: 'FIND_LESSONS_FOR_MODULE',\n      lessons: theLessons\n    })),\n    clearLesson: () => dispatch({\n      type: 'CLEAR_LESSON',\n      lessons: []\n    })\n  };\n};\n\nexport default connect(stpm, dtpm)(LessonTabs);\n\nvar _c;\n\n$RefreshReg$(_c, \"LessonTabs\");","map":{"version":3,"sources":["/Users/xinyue/Desktop/wbdv-s21-xinyue-dang-client-react/src/components/course-editor/lesson-tabs.js"],"names":["React","useEffect","connect","EditableItem","useParams","lessonService","LessonTabs","lessons","createLesson","updateLesson","deleteLesson","findLessonsForModule","clearLesson","layout","courseId","moduleId","lessonId","map","lesson","_id","stpm","state","lessonReducer","dtpm","dispatch","title","then","theActualLesson","type","item","status","lessonToDelete","lessonToUpdate","theLessons"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport EditableItem from '../editable-item'\nimport { useParams } from 'react-router-dom'\nimport lessonService from '../../services/lesson-service'\nimport './lesson-tabs.css'\n\nconst LessonTabs = ({\n    lessons = [],\n    createLesson,\n    updateLesson,\n    deleteLesson,\n    findLessonsForModule,\n    clearLesson,\n}) => {\n    const { layout, courseId, moduleId, lessonId } = useParams()\n    useEffect(() => {\n        if (moduleId !== 'undefined' && typeof moduleId !== 'undefined') {\n            findLessonsForModule(moduleId)\n        }else{\n            clearLesson()\n        }\n    }, [moduleId])\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-11\">\n                <ul className=\"nav nav-tabs\">\n                    {lessons.map((lesson) => (\n                        <li\n                            className={`nav-item ${\n                                lessonId === lesson._id ? 'active' : ''\n                            }`}\n                            key={lesson._id}\n                        >\n                            <EditableItem\n                                active={lesson._id === lessonId}\n                                to={`/courses/${layout}/editor/${courseId}/${moduleId}/${lesson._id}`}\n                                deleteItem={deleteLesson}\n                                updateItem={updateLesson}\n                                item={lesson}\n                            />\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div className=\"col-1\">\n                <i\n                    onClick={() => {\n                        createLesson(moduleId)\n                    }}\n                    className=\"fas fa-plus\"\n                />\n            </div>\n        </div>\n    )\n}\n\nconst stpm = (state) => {\n    return {\n        lessons: state.lessonReducer.lessons,\n    }\n}\nconst dtpm = (dispatch) => {\n    return {\n        createLesson: (moduleId) => {\n            lessonService\n                .createLesson(moduleId, { title: 'New Lesson' })\n                .then((theActualLesson) =>\n                    dispatch({\n                        type: 'CREATE_LESSON',\n                        lesson: theActualLesson,\n                    })\n                )\n        },\n        deleteLesson: (item) => {\n            lessonService.deleteLesson(item._id).then((status) =>\n                dispatch({\n                    type: 'DELETE_LESSON',\n                    lessonToDelete: item,\n                })\n            )\n        },\n        updateLesson: (lesson) =>\n            lessonService.updateLesson(lesson._id, lesson).then((status) =>\n                dispatch({\n                    type: 'UPDATE_LESSON',\n                    lessonToUpdate: lesson,\n                })\n            ),\n        findLessonsForModule: (moduleId) =>\n            lessonService.findLessonsForModule(moduleId).then((theLessons) =>\n                dispatch({\n                    type: 'FIND_LESSONS_FOR_MODULE',\n                    lessons: theLessons,\n                })\n            ),\n        clearLesson: () =>\n            dispatch({\n                type: 'CLEAR_LESSON',\n                lessons: [],\n            }),\n    }\n}\n\nexport default connect(stpm, dtpm)(LessonTabs)\n"]},"metadata":{},"sourceType":"module"}